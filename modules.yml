---
# this is not in yml to make perigrin cry, but just because ether speaks this
# more natively than INI. change to another format as desired!
# To parse: perl -MYAML::Any=LoadFile -MData::Dumper -wle'print Dumper(LoadFile("modules.yml"))'

Task::Kensho::Async:
    stopwords: Async
    description: Async Programming
    components:
        POE: Multitasking and networking framework for Perl
        IO::Async: Asynchronous event-driven programming


Task::Kensho::CLI:
    stopwords: pastebin
    description: Useful Command-line Tools
    components:
        App::Ack: A grep-like text finder
        App::Nopaste: Easy access to any pastebin
        Module::CoreList: What modules shipped with versions of perl
        Reply: reply - read, eval, print, loop, yay!


Task::Kensho::Config:
    description: Config Modules
    components:
        Config::Any: Load configuration from different file formats, transparently
        Config::General: Generic Config Module
        JSON::MaybeXS: wrapper around the most current and fast JSON backends


Task::Kensho::DBDev:
    description: Database Development
    components:
        DBI: Database independent interface for Perl
        DBD::SQLite: Self Contained RDBMS in a DBI Driver
        DBIx::Class: Extensible and flexible object <-> relational mapper.
        DBIx::Class::Schema::Loader: Dynamic definition of a DBIx::Class::Schema
        SQL::Translator: Manipulate structured data definitions (SQL and more)


Task::Kensho::Dates:
    description: Date Modules
    components:
        DateTime: A date and time object
        Date::Tiny: A date object with as little code as possible
        Time::Tiny: A time object with as little code as possible
        DateTime::Tiny: A date time object with as little code as possible
        Time::ParseDate: Date parsing both relative and absolute


Task::Kensho::Email:
    description: Email
    components:
        Email::Simple: A B<simple> email object. No, really!
        Email::Valid: Check validity of Internet email addresses
        Email::Sender: A library for sending email
        Email::MIME::Kit: The Swiss army chainsaw of assembling email messages


Task::Kensho::ExcelCSV:
    stopwords: CSV
    description: Excel/CSV
    components:
        Text::CSV_XS: Manipulate comma-separated values (CSV)
        Spreadsheet::ParseExcel::Simple: A simple interface to Excel data
        Spreadsheet::WriteExcel::Simple: Create Excel documents easily


Task::Kensho::Exceptions:
    description: Exception Handling
    components:
        Try::Tiny: Lightweight exception handling that handles the vagaries of $@.
        autodie: Make builtins and other functions die instead of returning undef on failure.


Task::Kensho::Hackery:
    stopwords: whippitupitude Hackery
    description: Script Hackery
    long_description: '


These packages are included less for production work and more for whippitupitude. They reflect packages that people have found incredibly useful for prototyping and debugging before reducing down to a production script.'
    components:
        Smart::Comments: Comments that do more than just sit there
        Term::ProgressBar::Simple: Simple progress bars
        IO::All: 'IO::All combines all of the best Perl IO modules into a single nifty object oriented interface to greatly simplify your everyday Perl IO idioms.'

Task::Kensho::Logging:
    description: Logging
    components:
        Log::Dispatch: 'This module manages a set of Log::Dispatch::* output objects that can be logged to via a unified interface.'
        Log::Log4perl: 'Log::Log4perl lets you remote-control and fine-tune the logging behaviour of your system from the outside. It implements the widely popular (Java-based) Log4j logging package in pure Perl.'
        Log::Contextual: 'Log::Contextual is a simple interface to extensible logging.  It is bundled with a really basic logger, Log::Contextual::SimpleLogger.'


Task::Kensho::ModuleDev:
    stopwords: profiler templated
    description: Module Development
    components:
        Code::TidyAll: Engine for tidyall, your all-in-one code tidier and validator
        Data::Printer: Colored pretty-print of Perl data structures and objects
        Dist::Zilla: Builds distributions of code to be uploaded to the CPAN.
        Devel::Dwarn: Combine warns and Data::Dumper::Concise
        Devel::NYTProf: Powerful feature-rich perl source code profiler
        Perl::Tidy: Parses and beautifies perl source
        Perl::Critic: Critique Perl source code for best-practices.
        Devel::Confess: Include stack traces on all warnings and errors
        Modern::Perl: enable all of the features of Modern Perl with one command
        Perl::Version: Parse and manipulate Perl version strings
        Software::License: Packages that provide templated software licenses
        Pod::Readme: Convert POD to README file
        CPAN::Uploader: Upload things to the CPAN
        Module::Build::Tiny: A simple, lightweight, drop-in replacement for ExtUtils::MakeMaker or Module::Build


Task::Kensho::OOP:
    description: Object Oriented Programming
    components:
        Moose: a postmodern object system for Perl5
        MooseX::Getopt: a Moose role for processing command line options
        MooseX::SimpleConfig: a Moose role for setting attributes from a simple configuration file
        MooseX::Aliases: easy aliasing of methods and attributes in Moose
        MooseX::StrictConstructor: a Moose extension that makes your object constructors blow up on unknown attributes
        MooseX::NonMoose: easy subclassing of non-Moose classes
        MooseX::Role::Parameterized: Moose roles with composition parameters
        Task::Moose: Task::Moose installs Moose and optionally a list of recommended modules that extend Moose.
        Moo: Minimalist Object Orientation (with Moose compatibility)
        namespace::autoclean: keep imports out of your namespace (Moose-aware)
        Type::Tiny: tiny, yet Moo(se)-compatible type constraints
        Package::Variant: Parameterizable packages


Task::Kensho::Scalability:
    stopwords: Redis
    description: Scalability
    components:
      CHI: A unified cache interface, like DBI
      Redis: Perl binding for Redis database


Task::Kensho::Testing:
    description: Testing
    components:
        Test::Simple: Basic utilities for writing tests.
        Test::Fatal: Test exception-based code
        Test::Pod: Check for POD errors in files
        Test::Pod::Coverage: Check for pod coverage in your distribution.
        Test::Memory::Cycle: Check for memory leaks and circular memory references
        Devel::Cover: Code coverage metrics for Perl
        Test::Deep: Test deep data structures
        Test::Requires: Make running a test conditional on a particular module being installed
        Test::Warnings: Test for warnings and the lack of them


Task::Kensho::Toolchain:
    stopwords: Bundler
    description: Basic Toolchain
    components:
        App::cpanminus: Get, unpack, build and install modules from CPAN
        App::FatPacker: Pack your dependencies onto your script file
        App::perlbrew: Manage perl installations in your $HOME
        Carton: Perl module dependency manager (aka Bundler for Perl)
        CPAN::Mini: Create a minimal mirror of CPAN
        local::lib: Create and use a local lib/ for perl modules with PERL5LIB
        Pinto: Curate a repository of Perl modules
        version: Perl extension for Version Objects


Task::Kensho::WebCrawling:
    description: Web Crawling
    components:
        HTTP::Tiny: Lightweight HTTP client implementation
        HTTP::Thin: A Thin Wrapper around HTTP::Tiny to play nice with HTTP::Message
        LWP::UserAgent: Full-featured Web client library for Perl
        LWP::Simple: Simple procedural interface to LWP
        WWW::Mechanize: Handy web browsing in a Perl object
        WWW::Mechanize::TreeBuilder: This module combines WWW::Mechanize and HTML::TreeBuilder.
        WWW::Selenium: Perl Client for the Selenium Remote Control test tool


Task::Kensho::WebDev:
    stopwords: configs RSS
    description: Web Development
    components:
        Plack: Flexible superglue between Web Servers and Perl Web Frameworks or code.
        Task::Catalyst: Catalyst is The Elegant MVC Web Application Framework. Task::Catalyst is all you need to start with Catalyst.
        Dancer2: the new generation of Dancer, a lightweight yet powerful web application framework
        Mojolicious: Real-time web framework
        Template: (Template::Toolkit) Template Processing System
        HTML::BrowserDetect: Determine Web browser, version, and platform from an HTTP user agent string
        HTML::FormHandler: HTML forms using Moose
        CGI::FormBuilder::Source::Perl: Build CGI::FormBuilder configs from Perl syntax files.
        XML::RSS: Creates and updates RSS files
        XML::Atom: Atom feed and API implementation
        MIME::Types: Definition of MIME types


Task::Kensho::XML:
    stopwords: libxml libxml2 libxslt RDF
    description: XML Development
    components:
        XML::LibXML: Perl Binding for libxml2
        XML::LibXSLT: Interface to the gnome libxslt library
        XML::SAX: Simple/Streaming API for XML
        XML::Generator::PerlData: Perl extension for generating SAX2 events from nested Perl data structures.
        XML::SAX::Writer: Output XML from SAX2 Events
        RDF::Trine: An RDF Framework for Perl
